/*
 * File: gabor.vert.txt
 * Shader for drawing of basic parameterized gabor patches using xyL color
 * coordinates. Based on PTB basic gabor shader.
 *
 * All variables come in as degrees and are converted to radians here.
 * BK - April 2014	 
 */


/* Set from Matlab when texture is created */
uniform int rgbColor;
uniform vec2 size;
uniform int mask;
uniform int flickerMode;
uniform bool square;

uniform float multiGaborsPhaseOffset[10];
uniform float multiGaborsOriOffset[10];
uniform int multiGaborsN;

/* Attributes passed from Screen(): See the ProceduralShadingAPI.m file for infos: */
attribute vec4 sizeAngleFilterMode;
attribute vec4 modulateColor;
attribute vec4 auxParameters0;
attribute vec4 auxParameters1;

/* Information passed to the fragment shader: Attributes and precalculated per patch constants: */
varying float orientation;
varying float contrast;
varying float phase;
varying float freqTwoPi;
varying vec4 color; 
varying float sigma1;
varying float sigma2;
varying float flickerPhase;

void main()
{
    /* Apply standard geometric transformations to patch: */
    gl_Position = ftransform();

    /* The center of the gabor patch has coordinate (0,0): */
    gl_TexCoord[0] = gl_MultiTexCoord0 -vec4(size/2.0,0,0) ;

    /* auxParameters0   = [o.phase, o.frequency, o.sigma, ]
       auxParameters1   = o.contrast o.flickerPhase 0 0] */

    phase               = radians(auxParameters0[0]);
    freqTwoPi           = auxParameters0[1] * 2.0 * 3.141592654;
    sigma1              = auxParameters0[2];
    sigma2              = auxParameters0[3];    
    contrast            = auxParameters1[0];
    flickerPhase        = auxParameters1[1];
    
    orientation         = radians(90.0-sizeAngleFilterMode.z);
    color               = modulateColor;
    
}
